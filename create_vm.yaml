---
- name: Clone QCOW2 Image and Create a VM
  hosts: localhost
  vars:
    vm_name: "{{ lookup('env', 'VM_NAME') | default('test-vm', true) }}"
    vm_ram: "{{ lookup('env', 'VM_RAM') | default(2048, true) }}"
    vm_cpu: "{{ lookup('env', 'VM_CPU') | default(2, true) }}"
    base_qcow_image: "/var/lib/libvirt/images/ubuntu24-Main.qcow2"
    new_qcow_image: "/var/lib/libvirt/images/{{ vm_name }}.qcow2"

  tasks:
    - name: Ensure images directory exists
      file:
        path: /var/lib/libvirt/images
        state: directory
        mode: '0755'

    - name: Clone the QCOW2 image
      shell: sudo qemu-img convert -O qcow2 {{ base_qcow_image }} {{ new_qcow_image }}
      args:
        creates: "{{ new_qcow_image }}"

    - name: Generate a random MAC address
      shell: |
        echo 52:54:00:$(openssl rand -hex 3 | sed 's/\(..\)/\1:/g; s/:$//')
      register: mac_result

    - name: Show full result for mac_result
      debug:
        var: mac_result

    - name: Display generated MAC address
      debug:
        msg: "Generated MAC Address: {{ mac_result.stdout }}"

    - name: Ensure VM does not already exist
      command: virsh list --all
      register: existing_vms

    - name: Create VM if it does not exist
      shell: |
        virt-install \
        --name {{ vm_name }} \
        --ram {{ vm_ram }} \
        --vcpus {{ vm_cpu }} \
        --disk path={{ new_qcow_image }},format=qcow2 \
        --os-variant ubuntu20.04 \
        --network bridge=virbr0,mac={{ mac_address.stdout }},model=virtio \
        --import \
        --graphics vnc \
        --noautoconsole
      when: vm_name not in existing_vms.stdout

    - name: Print status
      debug:
        msg: "VM {{ vm_name }} created successfully with MAC Address: {{ mac_result.stdout }}"
